// Version: 1.0.0
type Color = {#B; #R};
type Imprint =
  {
    createdBy : Principal;
    createdWhen : Int;
    id : Nat64;
    imprintData : ImprintData;
    imprintType : Nat64;
    visible : Bool
  };
type ImprintData =
  {
    #BlobContent : Blob;
    #Nat16Content : Nat16;
    #Nat32Content : Nat32;
    #Nat64Content : Nat64;
    #Nat8Content : Nat8;
    #NatContent : Nat;
    #TextContent : Text
  };
type Mark = {createdBy : Principal; createdWhen : Int; id : Nat64};
type Tree<K, V> = {#leaf; #node : (Color, Tree<K, V>, (K, ?V), Tree<K, V>)};
actor {
  stable var imprintIdsByMarkId :
    {
      #leaf;
      #node :
        (Color, Tree<Nat64, [Nat64]>, (Nat64, ?[Nat64]),
         Tree<Nat64, [Nat64]>)
    };
  stable var imprints :
    {
      #leaf;
      #node :
        (Color, Tree<Nat64, Imprint>, (Nat64, ?Imprint),
         Tree<Nat64, Imprint>)
    };
  stable var imprintsCounter : Nat64;
  stable var markIdsByImprintId :
    {
      #leaf;
      #node :
        (Color, Tree<Nat64, [Nat64]>, (Nat64, ?[Nat64]),
         Tree<Nat64, [Nat64]>)
    };
  stable var marks :
    {
      #leaf;
      #node : (Color, Tree<Nat64, Mark>, (Nat64, ?Mark), Tree<Nat64, Mark>)
    };
  stable var marksCounter : Nat64
};
